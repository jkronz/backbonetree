!function(){var a,b,c=function(a,b){return function(){return a.apply(b,arguments)}},d={}.hasOwnProperty,e=function(a,b){function c(){this.constructor=a}for(var e in b)d.call(b,e)&&(a[e]=b[e]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a};window.backbonetree={},backbonetree.TreeView=function(b){function d(){return this.reset=c(this.reset,this),this.resetNodes=c(this.resetNodes,this),this.remove=c(this.remove,this),this.removeChildren=c(this.removeChildren,this),this.collectCheckedNodes=c(this.collectCheckedNodes,this),this.render=c(this.render,this),this.initialize=c(this.initialize,this),a=d.__super__.constructor.apply(this,arguments)}return e(d,b),d.prototype.tagName="ul",d.prototype.className="backbonetree",d.prototype.initialize=function(a){return this.tree=a.tree,this.nameField=a.nameField||"name",this.showLeaves=a.showLeaves||!1,this.selected=a.selected||function(){return!1},this.childViews=[]},d.prototype.render=function(){var a,b=this;return this.removeChildren(),a=document.createDocumentFragment(),_.each(this.tree.children,function(c){var d;return d=new backbonetree.TreeNode({node:c,nameField:b.nameField,showLeaves:b.showLeaves,selected:b.selected,parent:null,treeView:b}),b.childViews.push(d),a.appendChild(d.render().el)}),this.$el.html(a),this.resetNodes(this),this},d.prototype.collectCheckedNodes=function(){var a;return a=_.map(this.childViews,function(a){return a.collectCheckedNodes([])}),_.flatten(a)},d.prototype.removeChildren=function(){return _.each(this.childViews,function(a){return a.remove()})},d.prototype.remove=function(){return this.removeChildren(),this.stopListening(),this.undelegateEvents(),d.__super__.remove.call(this)},d.prototype.resetNodes=function(a){var b,c,d;for(c=[],b=a,d=[];b;)!b.reset()&&b.childViews.length&&_.each(b.childViews,function(a){return c.push(a)}),d.push(b=c.shift());return d},d.prototype.reset=function(){return!1},d}(Backbone.View),backbonetree.TreeNode=function(a){function d(){return this.collectCheckedNodes=c(this.collectCheckedNodes,this),this.template=c(this.template,this),this.expand=c(this.expand,this),this.reset=c(this.reset,this),this.render=c(this.render,this),this.initialize=c(this.initialize,this),b=d.__super__.constructor.apply(this,arguments)}return e(d,a),d.prototype.tagName="li",d.prototype.className="node collapsed",d.prototype.events={"click > a.expand":"expand","change > label > .selected-box":"toggleSelected"},d.prototype.initialize=function(a){var b=this;return this.node=a.node,this.treeView=a.treeView,this.parent=a.parent,this.nameField=a.nameField||"name",this.showLeaves=a.showLeaves,this.selected=a.selected,this._selected="function"==typeof this.selected?this.selected:function(a){return a[b.selected]},this.childViews=[]},d.prototype.render=function(){var a,b=this;return this.$el.html(this.template()),a=document.createDocumentFragment(),_.each(this.node.children,function(c){var d;return d=new backbonetree.TreeNode({node:c,parent:b,selected:b._selected,nameField:b.nameField,showLeaves:b.showLeaves,treeView:b.treeView}),b.childViews.push(d),a.appendChild(d.render().el)}),this.$(".children").html(a),this},d.prototype.reset=function(){var a;return a=this._selected(this.node),a&&this.forceUpdate(a),a},d.prototype.toggleSelected=function(){var a,b;return b=this.$(".selected-box:first"),a=b.prop("checked"),this.processUpdates(a),this.treeView.trigger("backbonetree:selection_updated",this.node)},d.prototype.forceUpdate=function(a){return this.$(".selected-box:first").prop("checked",a),this.processUpdates(a)},d.prototype.processUpdates=function(a){var b,c,d,e;return e=this.$(".selected-box:first"),c=e.parent().parent(),d=c.siblings(),c.find('input[type="checkbox"]').prop({indeterminate:!1,checked:a}),b=function(c){var d,e;return e=c.parent().parent(),d=!0,c.siblings().each(function(b,c){var e;return e=$(c).find('> label > input[type="checkbox"]').prop("checked"),d=e===a}),d&&a?(e.find('> label > input[type="checkbox"]').prop({indeterminate:!1,checked:a}),b(e)):d&&!a?(e.find('> label > input[type="checkbox"]').prop("checked",a),e.find('> label > input[type="checkbox"]').prop("indeterminate",e.find('input[type="checkbox"]:checked').length>0),b(e)):c.parents("li").find('> label > input[type="checkbox"]').prop({indeterminate:!0,checked:!1})},b(c)},d.prototype.expand=function(a){return this.$el.is(".collapsed")?this.$el.removeClass("collapsed"):this.$el.addClass("collapsed"),a.stopPropagation(),a.preventDefault()},d.prototype.template=function(){return null!=this.node.children&&this.node.children.length?'<a href="#" class="expand">\n  <i class="icon-expand-alt"></i>\n  <i class="icon-collapse-alt"></i>\n</a>\n<label class="checkbox"><input type="checkbox" class="selected-box"> '+this.node[this.nameField]+'</label>\n<ul class="children"></ul>':this.showLeaves?'<label class="checkbox"><input type="checkbox" class="selected-box"> '+this.node[this.nameField]+"</label>":void 0},d.prototype.collectCheckedNodes=function(a){return this.$(".selected-box:first").prop("checked")?a.push(this.node):_.each(this.childViews,function(b){return b.collectCheckedNodes(a)}),a},d}(Backbone.View)}.call(this);